{"version":3,"sources":["context/UserContext.js","components/login/LoginScreen.js","hooks/useForm.js","components/ui/Navbar.js","helpers/clasificacion.js","helpers/train.js","hooks/useFectch.js","components/mensualidad/Deudas.js","components/mensualidad/ListMensualidad.js","components/mensualidad/FirstMes.js","components/mensualidad/LastMes.js","components/mensualidad/Mensualidad.js","components/plan/ListPlan.js","components/plan/Planes.js","components/plan/PlanFamiliar.js","components/plan/PrecioPlan.js","components/Servicios/ListPrecioServicios.js","components/Servicios/PrecioServicio.js","components/Servicios/PrecioServicioOne.js","components/Servicios/ListServicios.js","components/Servicios/index.js","components/plan/ServiciosPlan.js","components/plan/ListFamiliares.js","components/plan/ServicioPlanFamiliar.js","components/Servicios/TipoServicio.js","components/chatbot/ChatbotScreen.js","routers/DasboardRoutes.js","routers/AppRouter.js","App.js","index.js"],"names":["UserContext","createContext","LoginScreen","history","setUser","useContext","useState","speak","setSpeak","initialState","values","setValues","reset","handleInputChange","target","name","value","useForm","cedula","password","formValues","handleLogin","e","a","preventDefault","replace","alert","className","onSubmit","type","placeholder","onChange","id","checked","to","Navbar","activeClassName","exact","clasificacion","user","classifier","natural","LogisticRegressionClassifier","Espa","addDocument","train","getClassifications","classify","useFetch","url","isMounted","useRef","data","loading","error","state","setState","useEffect","current","fetch","then","resp","json","Deudas","memo","key","mesesPendiente","opciones","year","month","day","ListMensualidad","nombre","apellido","total","fecha","Date","toLocaleDateString","FirstMes","usuario","LastMes","Mensualidad","steps","length","map","v","ListPlan","title","precio","Planes","descripcion","PlanesFamiliares","PrecioPlan","query","console","log","ListPrecioServicios","img","src","alt","PrecioServicio","servicio","PrecioServicioOne","precio_vs_servicios","ListServicios","Servicios","tipo_vs_servicios","ServiciosPlan","plan_servicios","ListFamiliares","ServiciosPlanFamiliar","servicios","TipoServicio","theme","background","fontFamily","headerBgColor","headerFontColor","headerFontSize","botBubbleColor","botFontColor","userBubbleColor","userFontColor","ChatbotScreen","navigator","onLine","headerTitle","botAvatar","userAvatar","speechSynthesis","enable","lang","recognitionEnable","floating","recognitionLang","message","trigger","component","options","label","end","DasboardRoutes","path","AppRouter","App","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.398bcad3.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useForm } from \"../../hooks/useForm\";\r\n\r\nimport \"./styles.css\";\r\n\r\nexport const LoginScreen = ({ history }) => {\r\n  const { setUser } = useContext(UserContext);\r\n  const [speak, setSpeak] = useState(false);\r\n  const [formValues, handleInputChange] = useForm({\r\n    cedula: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { cedula, password } = formValues;\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (cedula && password) {\r\n      await setUser({ cedula, password, speak });\r\n      history.replace(\"/\");\r\n    } else {\r\n      alert(\"error en campos\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container login-container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 login-form-1\">\r\n          <h3>LOGIN</h3>\r\n          <form onSubmit={handleLogin}>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"Your Cedula *\"\r\n                name=\"cedula\"\r\n                value={cedula}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                placeholder=\"Your Password *\"\r\n                name=\"password\"\r\n                value={password}\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n            <div className=\"form-check\">\r\n              <input\r\n                type=\"checkbox\"\r\n                className=\"form-check-input\"\r\n                id=\"exampleCheck1\"\r\n                value={speak}\r\n                onChange={({target:{checked}})=> setSpeak(checked)}\r\n              />\r\n              <label className=\"form-check-label\">Desea que el ChatBot hable?</label>\r\n            </div>\r\n            <div className=\"form-group mt-4\">\r\n              <input type=\"submit\" className=\"btnSubmit\" value=\"Login\" />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Link to=\"#\" className=\"ForgetPwd\">\r\n                Forget Password?\r\n              </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"col-md-6 login-form-2 container\">\r\n          <h3>BIENVENIDO!!</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n\r\n  const reset = () => {\r\n    setValues(initialState);\r\n  };\r\n\r\n  const handleInputChange = ({ target: { name, value } }) => {\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  return [values, handleInputChange, reset];\r\n};\r\n","import React from \"react\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nexport const Navbar = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n      <Link className=\"navbar-brand\" to=\"/\">\r\n        ChatBot\r\n      </Link>\r\n      <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <NavLink\r\n            activeClassName=\"active\"\r\n            className=\"nav-item nav-link\"\r\n            exact\r\n            to=\"/login\"\r\n          >\r\n            Logout\r\n          </NavLink>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import { train } from \"./train\";\r\n\r\nexport const clasificacion = (user) => {\r\n  const classifier = train();\r\n\r\n  if (classifier.getClassifications(user)[0].value === 0.5) {\r\n    return \"no-existe\";\r\n  }\r\n\r\n  return classifier.classify(user);\r\n};\r\n","import natural from \"natural\";\r\nimport Espa from \"../../node_modules/natural/lib/natural/stemmers/porter_stemmer_es\";\r\n\r\nexport const train = () => {\r\n  const classifier = new natural.LogisticRegressionClassifier(Espa);\r\n\r\n  //----- Preguntas Generales\r\n\r\n  classifier.addDocument(\"servicios\", \"servicio\");\r\n  classifier.addDocument(\r\n    \"servicios individuales o independiente\",\r\n    \"independiente\"\r\n  );\r\n  classifier.addDocument(\"precio de cada servicio\", \"precio-servicios\");\r\n\r\n  //planes y sus servicios\r\n  classifier.addDocument(\"planes\", \"plan\");\r\n  classifier.addDocument(\"servicios  plan premium\", \"premium\");\r\n  classifier.addDocument(\"servicios  plan basico\", \"basico\");\r\n  classifier.addDocument(\"precio plan premium\", \"precio/premium\");\r\n  classifier.addDocument(\"precio plan basico\", \"precio/basico\");\r\n  classifier.addDocument(\"plan familiar o planes familiares\", \"planes-familiares\");\r\n  classifier.addDocument(\r\n    \"servicios plan familiar\",\r\n    \"planes-familiares-servicios\"\r\n  );\r\n\r\n  //pagos y movimientos\r\n  classifier.addDocument(\"movimientos o pagos realizados\", \"movimientos\");\r\n  classifier.addDocument(\"primer pago\", \"primer-pago\");\r\n  classifier.addDocument(\"último pago\", \"ultimo-pago\");\r\n  classifier.addDocument(\"meses debo o tengo pendiente\", \"meses-pago\");\r\n\r\n  //Preguntas de Precios de Servicios Independientes\r\n\r\n  classifier.addDocument(\r\n    \"precio de los arreglos florales\",\r\n    \"arreglos florales\"\r\n  );\r\n  classifier.addDocument(\"precio de un ataud\", \"ataud\");\r\n  classifier.addDocument(\"precio de los recordatorios\", \"recordatorios\");\r\n  classifier.addDocument(\"precio de los servicios religiosos\", \"religiosos\");\r\n  classifier.addDocument(\"precio de una lapida\", \"lapida\");\r\n  classifier.addDocument(\"precio de un servicio de música\", \"musica\");\r\n\r\n  // Salir\r\n  classifier.addDocument(\"Salir o terminar conversacion\", \"end\");\r\n\r\n  classifier.train();\r\n\r\n  return classifier;\r\n};\r\n","import { useState, useEffect, useRef } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const isMounted = useRef(true);\r\n\r\n  const [state, setState] = useState({\r\n    data: null,\r\n    loading: true,\r\n    error: null,\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      isMounted.current = false;\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((resp) => resp.json())\r\n      .then((data) => {\r\n        isMounted &&\r\n          setState({\r\n            loading: false,\r\n            error: null,\r\n            data,\r\n          });\r\n      });\r\n  }, []);\r\n\r\n  return state;\r\n};\r\n","import React, { useContext, memo } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n\r\nconst Deudas = memo(() => {\r\n  const { user } = useContext(UserContext);\r\n\r\n  const url = `https://pruebachatbots.herokuapp.com/api/mensualidad/${user.cedula}`;\r\n  const { loading, data } = useFetch(url);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"Deudas\" className=\"list-group-item\">\r\n            <h3>Pendientes</h3>\r\n          </li>\r\n          <li key=\"MesesPendiente\" className=\"list-group-item\">\r\n            <div className=\"card\">\r\n              <h5 className=\"card-header\">\r\n                Cantidad de meses pendientes: {data.mesesPendiente}\r\n              </h5>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Deudas;\r\n","import React, { memo } from \"react\";\r\nconst opciones = {\r\n  year: \"numeric\",\r\n  month: \"2-digit\",\r\n  day: \"2-digit\",\r\n};\r\n\r\nexport const ListMensualidad = memo(({ nombre, apellido, total, fecha }) => {\r\n  fecha = new Date(fecha).toLocaleDateString(\"es-Es\", opciones);\r\n  return (\r\n    <div className=\"card\">\r\n      <h5 className=\"card-header\">\r\n        Cliente: {nombre} {apellido}\r\n      </h5>\r\n      <div className=\"card-body\">\r\n        <h6 className=\"card-header\">Total: {total}</h6>\r\n        <h6 className=\"card-header\">Fecha: {fecha}</h6>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React, { useContext } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListMensualidad } from \"./ListMensualidad\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n\r\nconst FirstMes = () => {\r\n  const { user } = useContext(UserContext);\r\n\r\n  const url = `https://pruebachatbots.herokuapp.com/api/mensualidad/primer/${user.cedula}`;\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"FirstMes\" className=\"list-group-item\">\r\n            <h3>Primer mes Pagado</h3>\r\n          </li>\r\n\r\n          {(() => {\r\n            const {\r\n              id,\r\n              total,\r\n              fecha,\r\n              usuario: { nombre, apellido },\r\n            } = data.data;\r\n            return (\r\n              <li key={id} className=\"list-group-item\">\r\n                <ListMensualidad\r\n                  total={total}\r\n                  fecha={fecha}\r\n                  nombre={nombre}\r\n                  apellido={apellido}\r\n                />\r\n              </li>\r\n            );\r\n          })()}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>No hay pagos disponibles</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FirstMes;\r\n","import React, { useContext } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListMensualidad } from \"./ListMensualidad\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n\r\nconst LastMes = () => {\r\n  const { user } = useContext(UserContext);\r\n\r\n  const url = `https://pruebachatbots.herokuapp.com/api/mensualidad/ultimo/${user.cedula}`;\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"LastMes\" className=\"list-group-item\">\r\n            <h3>Ultimo mes Pagado</h3>\r\n          </li>\r\n          {(() => {\r\n            const {\r\n              id,\r\n              total,\r\n              fecha,\r\n              usuario: { nombre, apellido },\r\n            } = data.data;\r\n            return (\r\n              <li key={id} className=\"list-group-item\">\r\n                <ListMensualidad\r\n                  total={total}\r\n                  fecha={fecha}\r\n                  nombre={nombre}\r\n                  apellido={apellido}\r\n                />\r\n              </li>\r\n            );\r\n          })()}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>No hay pagos disponibles</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LastMes;\r\n","  import React, { useContext } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListMensualidad } from \"./ListMensualidad\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\n\r\n\r\nconst Mensualidad = ({steps: {usuario: {value}} }) => {\r\n    const { user } = useContext(UserContext);\r\n\r\n  const url = `https://pruebachatbots.herokuapp.com/api/mensualidad/${user.cedula}`;\r\n  const { loading, data }  = useFetch(url);\r\n  return (\r\n    <>\r\n      {\r\n        loading ? <h3>Loading...</h3> : (\r\n          data.data.length ? (\r\n          <ul className=\"list-group list-group-flush\">\r\n            <li key=\"Mensualidad\" className=\"list-group-item\"><h3>Mensualidad</h3></li> \r\n            \r\n          {data.data.map(v => {\r\n\r\n            const {id, total,fecha,usuario:{nombre, apellido}} = v;\r\n\r\n            return(\r\n              <li key={id} className=\"list-group-item\"><ListMensualidad total={total} fecha={fecha} nombre={nombre} apellido={apellido} /></li> \r\n            )\r\n          })}\r\n          </ul>\r\n        ): (\r\n          <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\"><h3>No hay pagos disponibles</h3></li> \r\n          </ul>\r\n        )\r\n        )\r\n      }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mensualidad;\r\n","import React, { memo } from \"react\";\r\n\r\nexport const ListPlan = memo(({ title, precio }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h5 className=\"card-header\">{title}</h5>\r\n      <div className=\"card-body\">\r\n        <h6 className=\"card-header\">Precio: {precio}</h6>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListPlan } from \"./ListPlan\";\r\n\r\nconst Planes = () => {\r\n  const url = `https://pruebachatbots.herokuapp.com/api/plan`;\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data.length ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"Planes\" className=\"list-group-item\">\r\n            <h3>Planes</h3>\r\n          </li>\r\n          {data.data.map((v) => {\r\n            const { id, descripcion, precio } = v;\r\n\r\n            return (\r\n              <li key={id} className=\"list-group-item\">\r\n                <ListPlan title={descripcion} precio={precio} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>No hay planes disponibles</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Planes;\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListPlan } from \"./ListPlan\";\r\n\r\nconst PlanesFamiliares = () => {\r\n  const url = `https://pruebachatbots.herokuapp.com/api/plan/familiar`;\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data.length ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"Planes\" className=\"list-group-item\">\r\n            <h3>Planes Familiares</h3>\r\n          </li>\r\n          {data.data.map((v) => {\r\n            const { id, descripcion, precio } = v;\r\n\r\n            return (\r\n              <li key={id} className=\"list-group-item\">\r\n                <ListPlan title={descripcion} precio={precio} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>No hay planes familiares disponibles</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlanesFamiliares;\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListPlan } from \"./ListPlan\";\r\nimport { clasificacion } from \"../../helpers/clasificacion\";\r\n\r\nconst PrecioPlan = ({\r\n  steps: {\r\n    usuario: { value },\r\n  },\r\n}) => {\r\n  const query = clasificacion(value);\r\n  const url = `https://pruebachatbots.herokuapp.com/api/plan/${query}`;\r\n  console.log(url);\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data.length ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"Plan\" className=\"list-group-item\">\r\n            <h3>{`Precio del plan ${data.data[0].descripcion}`}</h3>\r\n          </li>\r\n          <li key={data.data.id} className=\"list-group-item\">\r\n            <ListPlan\r\n              title={data.data[0].descripcion}\r\n              precio={data.data[0].precio}\r\n            />\r\n          </li>\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>No hay planes disponibles</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrecioPlan;\r\n","import React, { memo } from \"react\";\r\n\r\nexport const ListPrecioServicios = memo(({ title, img, precio }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h5 className=\"card-header\">{title}</h5>\r\n      <h6 className=\"card-header\">Precio: {precio}</h6>\r\n      <div className=\"card-body\">\r\n        <img src={img} className=\"card-img\" alt={title} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListPrecioServicios } from \"./ListPrecioServicios\";\r\n\r\nconst PrecioServicio = () => {\r\n  const url = `https://pruebachatbots.herokuapp.com/api/precio`;\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data.length ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>Precio por servicio</h3>\r\n          </li>\r\n          {data.data.map((v) => {\r\n            const {\r\n              id,\r\n              precio,\r\n              servicio: { descripcion, img },\r\n            } = v;\r\n            return (\r\n              <li key={id} className=\"list-group-item\">\r\n                <ListPrecioServicios\r\n                  title={descripcion}\r\n                  img={img}\r\n                  precio={precio}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>No hay servicios disponibles</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrecioServicio;\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListPrecioServicios } from \"./ListPrecioServicios\";\r\nimport { clasificacion } from \"../../helpers/clasificacion\";\r\n\r\nconst PrecioServicioOne = ({\r\n  steps: {\r\n    usuario: { value },\r\n  },\r\n}) => {\r\n  const query = clasificacion(value);\r\n  const url = `https://pruebachatbots.herokuapp.com/api/precio/${query}`;\r\n  const { loading, data } = useFetch(url);\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data.length ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>Servicio: {data.data[0].descripcion}</h3>\r\n          </li>\r\n          {data.data.map((v) => {\r\n            const { id, descripcion, img } = v;\r\n            return (\r\n              <li key={id} className=\"list-group-item\">\r\n                <ListPrecioServicios\r\n                  title={descripcion}\r\n                  img={img}\r\n                  precio={v.precio_vs_servicios[0].precio}\r\n                />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>Este servicio no es un servicio que se vende individual</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PrecioServicioOne;\r\n","import React, { memo } from \"react\";\r\n\r\nexport const ListServicios = memo(({ title, img }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h5 className=\"card-header\">{title}</h5>\r\n      <div className=\"card-body\">\r\n        <img src={img} className=\"card-img\" alt={title} />\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListServicios } from \"./ListServicios\";\r\n\r\nconst Servicios = () => {\r\n  const url = `https://pruebachatbots.herokuapp.com/api/servicio`;\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data.length ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>Servicios</h3>\r\n          </li>\r\n\r\n          {data.data[0].tipo_vs_servicios.map((v) => {\r\n            const {\r\n              servicio: { id, descripcion, img },\r\n            } = v;\r\n\r\n            return (\r\n              <li key={id} className=\"list-group-item\">\r\n                <ListServicios title={descripcion} img={img} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>No hay servicios disponibles</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Servicios;\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListServicios } from \"../Servicios/ListServicios\";\r\nimport { clasificacion } from \"../../helpers/clasificacion\";\r\n\r\nconst ServiciosPlan = ({\r\n  steps: {\r\n    usuario: { value },\r\n  },\r\n}) => {\r\n  const query = clasificacion(value);\r\n  const url = `https://pruebachatbots.herokuapp.com/api/plan/${query}`;\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data.length ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h5>{` Plan ${query}: RD$ ${data.data[0].precio}`}</h5>{\" \"}\r\n            <h6>{`Servicios ofrecidos: `}</h6>\r\n          </li>\r\n          {data.data[0].plan_servicios.map((v) => {\r\n            const {\r\n              id,\r\n              servicio: { descripcion, img },\r\n            } = v;\r\n            return (\r\n              <li key={id} className=\"list-group-item\">\r\n                <ListServicios title={descripcion} img={img} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>No hay planes disponibles</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiciosPlan;\r\n","import React, { memo } from \"react\";\r\n\r\nexport const ListFamiliares = memo(({ title }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h6 className=\"card-header\">{title}</h6>\r\n    </div>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListFamiliares } from \"./ListFamiliares\";\r\n\r\nconst ServiciosPlanFamiliar = () => {\r\n  const url = `https://pruebachatbots.herokuapp.com/api/plan/servicio/familiar`;\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data.length ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>Planes Familiares</h3>\r\n          </li>\r\n\r\n          {data.data.map((servicios) => {\r\n            return (\r\n              <div key={servicios.id} className=\"card mb-3\">\r\n                <h4 className=\"card-header\">{servicios.descripcion}</h4>\r\n                {servicios.plan_servicios.map((servicio) => {\r\n                  const {\r\n                    id,\r\n                    servicio: { descripcion },\r\n                  } = servicio;\r\n                  return (\r\n                    <li key={id} className=\"list-group-item\">\r\n                      <ListFamiliares title={descripcion} />\r\n                    </li>\r\n                  );\r\n                })}\r\n              </div>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>No hay planes familiares disponibles</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ServiciosPlanFamiliar;\r\n","import React from \"react\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\nimport { ListServicios } from \"./ListServicios\";\r\nimport { clasificacion } from \"../../helpers/clasificacion\";\r\n\r\nconst TipoServicio = ({\r\n  steps: {\r\n    usuario: { value },\r\n  },\r\n}) => {\r\n  const query = clasificacion(value);\r\n  const url = `https://pruebachatbots.herokuapp.com/api/servicio/${query}`;\r\n  const { loading, data } = useFetch(url);\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h3>Loading...</h3>\r\n      ) : data.data.length ? (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>{`Servicios ${query}`}</h3>\r\n          </li>\r\n          {data.data[0].tipo_vs_servicios.map((v) => {\r\n            const {\r\n              id,\r\n              servicio: { descripcion, img },\r\n            } = v;\r\n            return (\r\n              <li key={id} className=\"list-group-item\">\r\n                <ListServicios title={descripcion} img={img} />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li key=\"servicios\" className=\"list-group-item\">\r\n            <h3>Este no es un tipo de servicio disponible</h3>\r\n          </li>\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TipoServicio;\r\n","import React, { useContext } from \"react\";\r\nimport ChatBot from \"react-simple-chatbot\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { UserContext } from \"../../context/UserContext\";\r\nimport { clasificacion } from \"../../helpers/clasificacion\";\r\nimport { useFetch } from \"../../hooks/useFectch\";\r\n\r\nimport Deudas from \"../mensualidad/Deudas\";\r\nimport FirstMes from \"../mensualidad/FirstMes\";\r\nimport LastMes from \"../mensualidad/LastMes\";\r\nimport Mensualidad from \"../mensualidad/Mensualidad\";\r\nimport Planes from \"../plan/Planes\";\r\nimport PlanesFamiliares from \"../plan/PlanFamiliar\";\r\nimport PrecioPlan from \"../plan/PrecioPlan\";\r\nimport PrecioServicio from \"../Servicios/PrecioServicio\";\r\nimport PrecioServicioOne from \"../Servicios/PrecioServicioOne\";\r\nimport Servicios from \"../Servicios\";\r\nimport ServiciosPlan from \"../plan/ServiciosPlan\";\r\nimport ServiciosPlanFamiliar from \"../plan/ServicioPlanFamiliar\";\r\nimport TipoServicio from \"../Servicios/TipoServicio\";\r\n\r\nconst theme = {\r\n  background: \"#F5F6F2\",\r\n  fontFamily: \"Segoe UI\",\r\n  headerBgColor: \"#06A7E8\",\r\n  headerFontColor: \"#fff\",\r\n  headerFontSize: \"20px\",\r\n  botBubbleColor: \"#D8DADA\",\r\n  botFontColor: \"#000\",\r\n  userBubbleColor: \"#06A7E8\",\r\n  userFontColor: \"#fff\",\r\n};\r\n\r\nexport const ChatbotScreen = () => {\r\n  const { user:{cedula, speak} } = useContext(UserContext);\r\n  const url = `https://pruebachatbots.herokuapp.com/api/usuario/${cedula}`;\r\n  const { loading, data } = useFetch(url);\r\n \r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {loading ? (\r\n        <h1>Loading</h1>\r\n      ) : (!navigator.onLine ? \r\n        (\r\n          <h1>No tiene conexon a internet</h1>\r\n        )\r\n        :\r\n        (\r\n          <ChatBot\r\n            headerTitle=\"Asistente de ventas\"\r\n            placeholder=\"Escriba su mensaje\"\r\n            botAvatar=\"https://support.upwork.com/hc/article_attachments/360040474034/chatbot-data.png\"\r\n            userAvatar=\"https://microhealth.com/assets/images/illustrations/personal-user-illustration-@2x.png\"\r\n            speechSynthesis={{ enable: {speak}, lang: 'es' }}\r\n            recognitionEnable={true}\r\n            floating={true}\r\n            recognitionLang=\"es\"\r\n            steps={[\r\n              {\r\n                id: \"1\",\r\n                message: `Hola! ${data.data.nombre} ${data.data.apellido}, ¿En qué te puedo ayudar?`,\r\n                trigger: \"usuario\",\r\n              },\r\n              {\r\n                id: \"usuario\",\r\n                user: true,\r\n                trigger: ({ value, steps }) => clasificacion(value),\r\n              },\r\n              {\r\n                id: \"servicio\",\r\n                component: <Servicios />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"independiente\",\r\n                component: <TipoServicio />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"plan\",\r\n                component: <Planes />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"premium\",\r\n                component: <ServiciosPlan />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"basico\",\r\n                component: <ServiciosPlan />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"precio/premium\",\r\n                component: <PrecioPlan />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"precio/basico\",\r\n                component: <PrecioPlan />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"planes-familiares\",\r\n                component: <PlanesFamiliares />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"planes-familiares-servicios\",\r\n                component: <ServiciosPlanFamiliar />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"precio-servicios\",\r\n                component: <PrecioServicio />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"movimientos\",\r\n                component: <Mensualidad />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"primer-pago\",\r\n                component: <FirstMes />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"ultimo-pago\",\r\n                component: <LastMes />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"meses-pago\",\r\n                component: <Deudas />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"ataud\",\r\n                component: <PrecioServicioOne />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"flores\",\r\n                component: <PrecioServicioOne />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"musica\",\r\n                component: <PrecioServicioOne />,\r\n                trigger: \"sugerencia2\",\r\n              },\r\n              {\r\n                id: \"no-existe\",\r\n                message:\r\n                  \"La pregunta realizada no puede ser contestada por este ChatBot, favor llamar 809-612-3445 para mas detalles\",\r\n                trigger: \"consultar\",\r\n              },\r\n              {\r\n                id: \"consultar\",\r\n                message:\r\n                  \"Estas son algunas sugerencias de lo que le puedo contestar\",\r\n                trigger: \"sugerencias\",\r\n              },\r\n              {\r\n                id: \"sugerencias\",\r\n                options: [\r\n                  { value: 1, label: \"Servicio\", trigger: \"servicio\" },\r\n                  { value: 2, label: \"Planes\", trigger: \"plan\" },\r\n                  {\r\n                    value: 3,\r\n                    label: \"Precio de los servicios\",\r\n                    trigger: \"precio-servicios\",\r\n                  },\r\n                  {\r\n                    value: 4,\r\n                    label: \"Planes familiares\",\r\n                    trigger: \"planes-familiares\",\r\n                  },\r\n                  { value: 5, label: \"Pagos realizados\", trigger: \"movimientos\" },\r\n                  { value: 6, label: \"Otra pregunta...\", trigger: \"otra\" },\r\n                  { value: 7, label: \"Terminar conversacion\", trigger: \"end\" },\r\n                ],\r\n              },\r\n              {\r\n                id: \"sugerencia2\",\r\n                message: \"En que otra cosa le puedo ayudar?\",\r\n                trigger: \"usuario\",\r\n              },\r\n              {\r\n                id: \"otra\",\r\n                message: \"Introduzca su pregunta en la caja de texto.\",\r\n                trigger: \"usuario\",\r\n              },\r\n              {\r\n                id: \"end\",\r\n                message: \"Gracias por charlar!\",\r\n                end: true,\r\n              },\r\n            ]}\r\n          />\r\n        )\r\n        )\r\n      }\r\n    </ThemeProvider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Navbar } from \"../components/ui/Navbar\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { ChatbotScreen } from \"../components/chatbot/ChatbotScreen\";\r\n\r\nexport const DasboardRoutes = () => {\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"container mt-2\">\r\n        <Switch>\r\n          <Route exact path=\"/chatbot\" component={ChatbotScreen} />\r\n          <Redirect to=\"/chatbot\" />\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport { LoginScreen } from \"../components/login/LoginScreen\";\r\nimport { DasboardRoutes } from \"./DasboardRoutes\";\r\n// Sistema de rutas principal\r\nexport const AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={LoginScreen} />\r\n          <Route path=\"/\" component={DasboardRoutes} />\r\n          {/* Sistema de rutas hijas */}\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AppRouter } from \"./routers/AppRouter\";\r\nimport { UserContext } from \"./context/UserContext\";\r\n\r\nexport const App = () => {\r\n  const [user, setUser] = useState({\r\n    cedula: \"40212345667\",\r\n    password: \"qweqwewe\",\r\n    speak: false\r\n  });\r\n\r\n  return (\r\n    <UserContext.Provider value={{ user, setUser }}>\r\n      <AppRouter />\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}